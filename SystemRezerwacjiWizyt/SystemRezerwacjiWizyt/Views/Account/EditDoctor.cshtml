@using System.Activities.Statements
@using DatabaseAccess.Model
@model SystemRezerwacjiWizyt.Models.EditDoctorViewModel
@{
    ViewBag.Title = "Edycja profilu";
    var Speclist = Model.SpecToChoose;
    var DocSpecList = Model.doc.Specialization;
}
<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            document.getElementById("SpecToAdd").selectedIndex = 0;
            document.getElementById("SpecToDel").selectedIndex = -1;
        });

        function ClearToAdd() {
            document.getElementById("SpecToAdd").selectedIndex = 0;
        }

        function ClearToDel() {
            document.getElementById("SpecToDel").selectedIndex = -1;
        }

        function ClearAll() {
            document.getElementById("SpecToAdd").selectedIndex = 0;
            document.getElementById("SpecToDel").selectedIndex = -1;
        }
    </script>
</head>
<body>
    @ViewBag.Mess
    @using (Html.BeginForm())
    {

        @Html.AntiForgeryToken()
        <ol id="demo"></ol>
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.doc.User.Name.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.doc.User.Name.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.doc.User.Name.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.doc.User.Name.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.doc.User.Name.Surname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.doc.User.Name.Surname, "", new { @class = "text-danger" })
                </div>
            </div>
            <div>
                @Html.HiddenFor(model => model.doc.User.PESEL, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div>
                @Html.HiddenFor(model => model.doc.User.Password, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Specjalizacje</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SpecId, new SelectList(Speclist, "Key", "Name", "0"), "Wybierz... ", new { id = "SpecToAdd", @class = "form-control" })
                    <input type="submit" value="Dodaj" onclick="ClearToDel()" class="btn btn-default" />
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2"></label>
                <div class="col-md-10">
                    @Html.ListBoxFor(model => model.SelectedSpec, new SelectList(DocSpecList, "Key", "Name"), new { size = @DocSpecList.Count, id = "SpecToDel", @class = "form-control" })
                    <input type="submit" value="Usuń" onclick="ClearToAdd()" class="btn btn-default" />
                </div>
                @for (int i = 0; i < Model.doc.Specialization.Count(); i++)
                {
                    @Html.HiddenFor(m => m.doc.Specialization[i].Name)
                }
            </div>

            @Html.DropDownListFor(model => model.SpecId, new SelectList(Speclist, "Key", "Name", "0"), "Choose... ", new { id = "SpecToAdd" });

            <input type="submit" value="Dodaj" onclick="ClearToDel()" class="btn btn-default" />
            <div id="editorRows">
            </div>
            <div>
                @Html.ListBoxFor(model => model.SelectedSpec, new SelectList(DocSpecList, "Key", "Name"), new { size = @DocSpecList.Count, id = "SpecToDel" })
                <input type="submit" value="Usuń" onclick="ClearToAdd()" class="btn btn-default" />
                <div class="form-group">
                    @Html.LabelFor(model => model.doc.User.Mail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.doc.User.Mail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.doc.User.Mail, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">Godziny pracy</label>
                    <hr />
                    <div class="form-group">
                        <label class="control-label col-md-3">Poniedziałek</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.doc.MondayWorkingTime.Start, new { htmlAttributes = new { @class = "form-control", style = "width: 100px" } })
                            @Html.ValidationMessageFor(model => model.doc.MondayWorkingTime.Start, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.doc.MondayWorkingTime.End, new { htmlAttributes = new { @class = "form-control", style = "width: 100px" } })
                            @Html.ValidationMessageFor(model => model.doc.MondayWorkingTime.End, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3">Wtorek</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.doc.TuesdayWorkingTime.Start, new { htmlAttributes = new { @class = "form-control", style = "width: 100px" } })
                            @Html.ValidationMessageFor(model => model.doc.TuesdayWorkingTime.Start, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.doc.TuesdayWorkingTime.End, new { htmlAttributes = new { @class = "form-control", style = "width: 100px" } })
                            @Html.ValidationMessageFor(model => model.doc.TuesdayWorkingTime.End, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3">Środa</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.doc.WednesdayWorkingTime.Start, new { htmlAttributes = new { @class = "form-control", style = "width: 100px" } })
                            @Html.ValidationMessageFor(model => model.doc.WednesdayWorkingTime.Start, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.doc.WednesdayWorkingTime.End, new { htmlAttributes = new { @class = "form-control", style = "width: 100px" } })
                            @Html.ValidationMessageFor(model => model.doc.WednesdayWorkingTime.End, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3">Czwartek</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.doc.ThursdayWorkingTime.Start, new { htmlAttributes = new { @class = "form-control", style = "width: 100px" } })
                            @Html.ValidationMessageFor(model => model.doc.ThursdayWorkingTime.Start, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.doc.ThursdayWorkingTime.End, new { htmlAttributes = new { @class = "form-control", style = "width: 100px" } })
                            @Html.ValidationMessageFor(model => model.doc.ThursdayWorkingTime.End, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3">Piątek</label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.doc.FridayWorkingTime.Start, new { htmlAttributes = new { @class = "form-control", style = "width: 100px" } })
                            @Html.ValidationMessageFor(model => model.doc.FridayWorkingTime.Start, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.doc.FridayWorkingTime.End, new { htmlAttributes = new { @class = "form-control", style = "width: 100px" } })
                            @Html.ValidationMessageFor(model => model.doc.FridayWorkingTime.End, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.PasswordFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @Html.HiddenFor(model => model.doc.User.PESEL)
                    @Html.HiddenFor(model => model.doc.User.Password)
                    @Html.HiddenFor(Model => Model.doc.User.Active)
                    @Html.HiddenFor(Model => Model.doc.User.Kind)
                    @for (int i = 0; i < Model.doc.Specialization.Count(); i++)
                {
                        @Html.HiddenFor(m => m.doc.Specialization[i].Name)
                    }
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Zapisz zmiany" onclick="ClearToDel()" class="btn btn-primary" />
                            @Html.ActionLink("Usuń konto", "DeleteAccount", "Account", new { style = "margin-left: 10px" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</body>